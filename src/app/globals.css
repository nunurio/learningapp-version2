@import "tailwindcss";

/* Design tokens (HSL for easy theming) */
:root {
  /* Legacy tokens for compatibility */
  --bg: 0 0% 100%;
  --fg: 222 84% 5%;
  --muted: 214 32% 91%;
  --card: 0 0% 100%;
  --border: 220 13% 85%;  /* Softer, slightly blue-tinted border */
  --primary: 218 65% 46%;  /* Softer, more comfortable blue */
  --primary-fg: 0 0% 100%;
  --destructive: 0 84.2% 60.2%;
  --accent: 217 92% 95%;
  --focus: 221 83% 53%;

  /* Modern color palette (HSL values) */
  /* Primary Blues - Learning & Growth (Refined for visual comfort) */
  --primary-50: 214 100% 97%;
  --primary-100: 214 95% 93%;
  --primary-200: 213 92% 85%;
  --primary-300: 212 88% 75%;
  --primary-400: 213 78% 63%;
  --primary-500: 216 70% 52%;  /* Main brand color - softer saturation */
  --primary-600: 218 65% 46%;  /* Reduced saturation for comfort */
  --primary-700: 220 62% 40%;
  --primary-800: 222 58% 34%;
  --primary-900: 224 54% 28%;

  /* Secondary (Amber-like) - Energy & Vitality */
  --secondary-50: 48 100% 96%;
  --secondary-100: 48 96% 89%;
  --secondary-200: 48 96% 77%;
  --secondary-300: 45 97% 65%;
  --secondary-400: 43 96% 56%;
  --secondary-500: 38 92% 50%;  /* Accent color */
  --secondary-600: 32 95% 44%;
  --secondary-700: 26 90% 37%;
  --secondary-800: 22 83% 33%;
  --secondary-900: 20 79% 30%;

  /* Semantic colors */
  --success-50: 142 76% 97%;
  --success-500: 142 69% 58%;
  --success-600: 142 72% 45%;
  --error-50: 0 86% 97%;
  --error-500: 0 84% 60%;
  --error-600: 0 72% 51%;
  --warning-50: 48 100% 96%;
  --warning-500: 38 92% 50%;
  --warning-600: 32 95% 44%;

  /* Gradients */
  --gradient-primary: linear-gradient(135deg, hsl(221 83% 53%) 0%, hsl(217 91% 60%) 100%);
  --gradient-success: linear-gradient(135deg, #10b981 0%, #34d399 100%);
  --gradient-error: linear-gradient(135deg, #ef4444 0%, #f87171 100%);
  --gradient-card: linear-gradient(180deg, rgba(255,255,255,1) 0%, rgba(249,250,251,1) 100%);
  --gradient-hero: linear-gradient(135deg, hsl(221 83% 53% / 10%) 0%, hsl(217 91% 60% / 10%) 100%);

  /* Modern Borders */
  --border-subtle: 220 13% 90%;
  --border-default: 220 13% 85%;
  --border-strong: 220 13% 75%;
  --border-interactive: var(--primary-300);
  --border-glow: 0 0 0 1px hsl(var(--primary-400) / 0.5), 0 0 20px hsl(var(--primary-400) / 0.3);

  /* Shadows - Enhanced for depth */
  --shadow-sm: 0 1px 3px 0 rgb(0 0 0 / 0.05), 0 1px 2px 0 rgb(0 0 0 / 0.02);
  --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.08), 0 2px 4px -2px rgb(0 0 0 / 0.04);
  --shadow-lg: 0 10px 25px -3px rgb(0 0 0 / 0.08), 0 4px 10px -4px rgb(0 0 0 / 0.04);
  --shadow-xl: 0 20px 40px -5px rgb(0 0 0 / 0.1), 0 8px 15px -6px rgb(0 0 0 / 0.05);
  --shadow-2xl: 0 25px 50px -12px rgb(0 0 0 / 0.2);
  --shadow-inner: inset 0 2px 4px 0 rgb(0 0 0 / 0.06);
  --shadow-glow: 0 0 20px hsl(var(--primary-400) / 0.3);
  --shadow-elevated: 0 4px 12px hsl(var(--primary-600) / 0.08), 0 0 0 1px hsl(var(--border));
  --shadow-card: 0 1px 3px rgb(0 0 0 / 0.06), 0 1px 2px rgb(0 0 0 / 0.04);

  /* Animation timing */
  --animation-fast: 150ms;
  --animation-base: 250ms;
  --animation-slow: 350ms;
  --animation-slower: 500ms;

  /* Border radius */
  --radius-sm: 0.25rem;
  --radius-md: 0.5rem;
  --radius-lg: 0.75rem;
  --radius-xl: 1rem;
  --radius-2xl: 1.5rem;
  --radius-full: 9999px;

  /* shadcn/ui compatibility aliases (map project tokens → shadcn tokens) */
  /* Base */
  --background: var(--bg);
  --foreground: var(--fg);
  --border: var(--border);
  --input: var(--border);
  --ring: var(--primary);
  /* Surfaces */
  --card-foreground: var(--fg);
  --popover: var(--bg);
  --popover-foreground: var(--fg);
  /* Accents */
  --primary-foreground: var(--primary-fg);
  --secondary: var(--secondary-500);
  --secondary-foreground: var(--primary-fg);
  --accent-foreground: var(--fg);
  --muted-foreground: var(--fg);
  --destructive-foreground: var(--primary-fg);
}

@media (prefers-color-scheme: dark) {
  :root {
    /* Dark mode legacy tokens */
    --bg: 222 84% 5%;
    --fg: 0 0% 95%;
    --muted: 217 33% 17%;
    --card: 222 84% 5%;
    --border: 217 33% 25%;  /* Lighter, more visible border in dark mode */
    --primary: 216 70% 52%;  /* Softer blue for dark mode */
    /* Foreground color used on primary backgrounds */
    --primary-fg: 0 0% 100%;
    --destructive: 0 62.8% 30.6%;
    --accent: 217 33% 17%;
    --focus: 217 91% 60%;

    /* Dark mode gradients */
    --gradient-primary: linear-gradient(135deg, hsl(217 91% 60%) 0%, hsl(221 83% 70%) 100%);
    --gradient-card: linear-gradient(180deg, hsl(222 84% 8%) 0%, hsl(222 84% 5%) 100%);
    --gradient-hero: linear-gradient(135deg, hsl(217 91% 60% / 20%) 0%, hsl(221 83% 70% / 20%) 100%);

    /* shadcn/ui compatibility aliases (dark) */
    --background: var(--bg);
    --foreground: var(--fg);
    --border: var(--border);
    --input: var(--border);
    --ring: var(--primary);
    --card-foreground: var(--fg);
    --popover: var(--bg);
    --popover-foreground: var(--fg);
    --primary-foreground: var(--primary-fg);
    --secondary: var(--secondary-500);
    --secondary-foreground: var(--primary-fg);
    --accent-foreground: var(--fg);
    --muted-foreground: var(--fg);
    --destructive-foreground: var(--primary-fg);
  }
}

@theme inline {
  /* Fonts */
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);

  /* Tailwind v4 color tokens mapping to our HSL design tokens */
  /* Base (light) scheme */
  --color-background: hsl(var(--bg));
  --color-foreground: hsl(var(--fg));
  --color-card: hsl(var(--card));
  --color-card-foreground: hsl(var(--fg));
  --color-border: hsl(var(--border));
  --color-accent: hsl(var(--accent));
  --color-accent-foreground: hsl(var(--fg));

  /* shadcn/ui essentials */
  --color-muted: hsl(var(--muted));
  --color-muted-foreground: hsl(var(--fg) / 0.6);
  --color-popover: hsl(var(--card));
  --color-popover-foreground: hsl(var(--fg));
  --color-input: hsl(var(--border));
  --color-ring: hsl(var(--primary-500) / 0.5);

  --color-primary: hsl(var(--primary-600));
  --color-primary-foreground: hsl(var(--primary-fg, 0 0% 100%));
  --color-primary-400: hsl(var(--primary-400));
  --color-primary-500: hsl(var(--primary-500));
  --color-primary-300: hsl(var(--primary-300));
  --color-primary-600: hsl(var(--primary-600));
  --color-primary-700: hsl(var(--primary-700));

  --color-secondary: hsl(var(--secondary-500));
  --color-secondary-foreground: hsl(0 0% 100%);
  --color-secondary-400: hsl(var(--secondary-400));
  --color-secondary-500: hsl(var(--secondary-500));
  --color-secondary-600: hsl(var(--secondary-600));

  /* Destructive uses our semantic error/destructive token */
  --color-destructive: hsl(var(--destructive));
  --color-destructive-foreground: hsl(0 0% 98%);

  /* Radius bridge for shadcn */
  --radius: var(--radius-lg);
  --radius-xs: var(--radius-sm);
  --radius-sm: var(--radius-sm);
  --radius-md: var(--radius-md);
  --radius-lg: var(--radius-lg);
  --radius-xl: var(--radius-xl);
}

/* Dark scheme overrides */
@media (prefers-color-scheme: dark) {
  @theme inline {
    --color-background: hsl(var(--bg));
    --color-foreground: hsl(var(--fg));
    --color-card: hsl(var(--card));
    --color-card-foreground: hsl(var(--fg));
    --color-border: hsl(var(--border));
    --color-accent: hsl(var(--accent));
    --color-accent-foreground: hsl(var(--fg));

    /* shadcn/ui essentials */
    --color-muted: hsl(var(--muted));
    --color-muted-foreground: hsl(var(--fg) / 0.65);
    --color-popover: hsl(var(--card));
    --color-popover-foreground: hsl(var(--fg));
    --color-input: hsl(var(--border));
    --color-ring: hsl(var(--primary-400) / 0.4);

    --color-primary: hsl(var(--primary-500));
    --color-primary-foreground: hsl(var(--primary-fg, 0 0% 100%));
    --color-primary-300: hsl(var(--primary-300));
    --color-primary-400: hsl(var(--primary-400));
    --color-primary-500: hsl(var(--primary-500));
    --color-primary-600: hsl(var(--primary-600));
    --color-primary-700: hsl(var(--primary-700));

    --color-secondary: hsl(var(--secondary-500));
    --color-secondary-foreground: hsl(0 0% 100%);
    --color-secondary-400: hsl(var(--secondary-400));
    --color-secondary-500: hsl(var(--secondary-500));
    --color-secondary-600: hsl(var(--secondary-600));

    --color-destructive: hsl(var(--destructive));
    --color-destructive-foreground: hsl(0 0% 98%);

    /* Radius bridge for shadcn */
    --radius: var(--radius-lg);
    --radius-xs: var(--radius-sm);
    --radius-sm: var(--radius-sm);
    --radius-md: var(--radius-md);
    --radius-lg: var(--radius-lg);
    --radius-xl: var(--radius-xl);
  }
}

/* Base */
html, body {
  height: 100%;
}

/* Improve native widget theming and defaults */
:root {
  color-scheme: light dark;
}

/* Apply background and foreground via CSS variables as default */
body {
  background-color: hsl(var(--bg));
  color: hsl(var(--fg));
  font-family: var(--font-geist-sans), ui-sans-serif, system-ui, -apple-system,
    Segoe UI, Roboto, Noto Sans, Ubuntu, Cantarell, Helvetica Neue, Arial,
    "Apple Color Emoji", "Segoe UI Emoji";
}

/* Focus ring (WCAG 2.2: 2.4.13) */
:where(a, button, input, textarea, select, [tabindex]):focus-visible {
  outline: 2px solid hsl(var(--focus));
  outline-offset: 2px;
}

/* Reflect brand color to form controls */
:where(input, textarea, select, progress) {
  accent-color: hsl(var(--primary-600));
}

/* Reduced motion respect */
@media (prefers-reduced-motion: reduce) {
  *, *::before, *::after {
    animation-duration: 0.001ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.001ms !important;
    scroll-behavior: auto !important;
  }
}

/* Target size minimum (2.5.8 – soft) */
:where(button, [role="button"]) {
  min-height: 24px;
  min-width: 24px;
}

/* Animations */
@keyframes fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fade-in-up {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slide-in-right {
  from {
    transform: translateX(100%);
  }
  to {
    transform: translateX(0);
  }
}

@keyframes scale-in {
  from {
    opacity: 0;
    transform: scale(0.95);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes pulse-subtle {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.8;
  }
}

@keyframes shimmer {
  0% {
    background-position: -1000px 0;
  }
  100% {
    background-position: 1000px 0;
  }
}

/* Utility classes for modern effects */
.glass {
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
}

/* Virtualization-friendly section (lightweight) */
.virtual-section {
  content-visibility: auto;
  contain-intrinsic-size: 600px;
}

.gradient-border {
  position: relative;
  background: linear-gradient(hsl(var(--card)), hsl(var(--card))) padding-box,
              var(--gradient-primary) border-box;
  border: 2px solid transparent;
  border-radius: var(--radius-lg);
}

.hover-lift {
  transition: transform var(--animation-base) cubic-bezier(0.4, 0, 0.2, 1),
              box-shadow var(--animation-base) cubic-bezier(0.4, 0, 0.2, 1);
}

.hover-lift:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow-lg);
}

.card-interactive {
  transition: all var(--animation-base) cubic-bezier(0.4, 0, 0.2, 1);
  cursor: pointer;
}

.card-interactive:hover {
  transform: translateY(-4px);
  box-shadow: var(--shadow-xl);
  background: var(--gradient-card);
}

/* --- Markdown list fixes -------------------------------------------------- */
/* Tailwind Preflight resets remove list markers. Restore them inside
   our markdown wrapper (used by ReactMarkdown with GitHub style). */
:where(.markdown-body) ul,
:where(.markdown-body) ol {
  list-style: revert;
  padding-left: 1.5rem;
}

/* Keep nested lists compact and preserve markers */
:where(.markdown-body) ul ul,
:where(.markdown-body) ul ol,
:where(.markdown-body) ol ul,
:where(.markdown-body) ol ol {
  margin-top: 0;
  margin-bottom: 0;
  list-style: inherit;
}

/* Remove underline/border under #, ## headings in preview */
:where(.markdown-body) h1,
:where(.markdown-body) h2 {
  border-bottom: none !important;
  padding-bottom: 0 !important;
}

/* Inline markdown variant for embedding rich text inside controls */
:where(.markdown-inline) {
  display: inline;
  white-space: normal;
}

:where(.markdown-inline)::before,
:where(.markdown-inline)::after {
  content: none !important;
  display: contents !important;
}

:where(.markdown-inline) p,
:where(.markdown-inline) h1,
:where(.markdown-inline) h2,
:where(.markdown-inline) h3,
:where(.markdown-inline) h4,
:where(.markdown-inline) h5,
:where(.markdown-inline) h6 {
  display: contents;
  margin: 0;
  padding: 0;
}

:where(.markdown-inline) ul,
:where(.markdown-inline) ol {
  margin: 0;
  padding: 0;
}

/* --- Modern Button Styles ---------------------------------------- */
@layer utilities {
  /* Ripple effect for buttons */
  @keyframes button-ripple {
    to {
      transform: scale(4);
      opacity: 0;
    }
  }

  /* Button hover lift effect - subtle */
  [data-slot="button"]:not(:disabled):hover {
    transform: translateY(-1px);
  }

  /* Active press effect - natural feel */
  [data-slot="button"]:not(:disabled):active {
    transform: scale(0.97) translateY(0);
  }

  /* Focus visible improvements - WCAG compliant */
  [data-slot="button"]:focus-visible {
    outline: none;
    box-shadow: 0 0 0 2px hsl(var(--bg)),
                0 0 0 4px hsl(var(--primary-500) / 0.4);
  }
  
  @media (prefers-color-scheme: dark) {
    [data-slot="button"]:focus-visible {
      box-shadow: 0 0 0 2px hsl(var(--bg)),
                  0 0 0 4px hsl(var(--primary-400) / 0.3);
    }
  }

  /* Smooth color transitions */
  [data-slot="button"] {
    position: relative;
    transition: all 200ms cubic-bezier(0.4, 0, 0.2, 1);
    transform-style: preserve-3d;
    backface-visibility: hidden;
  }

  /* Primary variant - refined for visual comfort */
  [data-slot="button"].bg-primary {
    background: hsl(var(--primary-600));
    box-shadow: 0 1px 3px hsl(0 0% 0% / 0.12),
                0 1px 2px hsl(0 0% 0% / 0.06);
  }

  [data-slot="button"].bg-primary:not(:disabled):hover {
    background: hsl(var(--primary-700));
    box-shadow: 0 2px 6px hsl(0 0% 0% / 0.15),
                0 1px 3px hsl(0 0% 0% / 0.08);
  }

  /* Secondary variant - refined for visual comfort */
  [data-slot="button"].bg-secondary {
    background: hsl(var(--secondary-500));
    box-shadow: 0 1px 3px hsl(0 0% 0% / 0.12),
                0 1px 2px hsl(0 0% 0% / 0.06);
  }

  [data-slot="button"].bg-secondary:not(:disabled):hover {
    background: hsl(var(--secondary-600));
    box-shadow: 0 2px 6px hsl(0 0% 0% / 0.15),
                0 1px 3px hsl(0 0% 0% / 0.08);
  }

  /* Outline variant glass effect */
  [data-slot="button"].border {
    background: hsl(var(--bg) / 0.5);
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
    border: 1px solid hsl(var(--border) / 0.5);
  }

  [data-slot="button"].border:not(:disabled):hover {
    background: hsl(var(--accent) / 0.8);
    border-color: hsl(var(--primary-400) / 0.5);
    box-shadow: 0 2px 8px hsl(var(--primary-500) / 0.1);
  }

  /* Ghost variant subtle interactions */
  [data-slot="button"]:not([class*="bg-"]):not(.border):not(.text-primary):hover {
    background: hsl(var(--accent) / 0.6);
    box-shadow: 0 1px 3px hsl(0 0% 0% / 0.05);
  }

  /* Dark mode adjustments */
  @media (prefers-color-scheme: dark) {
    [data-slot="button"].bg-primary {
      background: hsl(var(--primary-500));
      box-shadow: 0 1px 3px hsl(0 0% 0% / 0.2),
                  0 1px 2px hsl(0 0% 0% / 0.1);
    }

    [data-slot="button"].bg-primary:not(:disabled):hover {
      background: hsl(var(--primary-400));
      box-shadow: 0 2px 6px hsl(0 0% 0% / 0.25),
                  0 1px 3px hsl(0 0% 0% / 0.15);
    }

    [data-slot="button"].border {
      background: hsl(var(--bg) / 0.05);
      border-color: hsl(var(--border) / 0.3);
    }

    [data-slot="button"].border:not(:disabled):hover {
      background: hsl(var(--accent) / 0.2);
      border-color: hsl(var(--primary-400) / 0.6);
      box-shadow: 0 2px 12px hsl(var(--primary-400) / 0.15),
                  inset 0 0 20px hsl(var(--primary-400) / 0.05);
    }
  }

  /* Loading state animation */
  [data-slot="button"][data-loading="true"] {
    color: transparent;
    pointer-events: none;
  }

  [data-slot="button"][data-loading="true"]::after {
    content: "";
    position: absolute;
    width: 16px;
    height: 16px;
    top: 50%;
    left: 50%;
    margin-left: -8px;
    margin-top: -8px;
    border: 2px solid hsl(var(--primary-fg));
    border-radius: 50%;
    border-top-color: transparent;
    animation: button-loading 0.6s linear infinite;
  }

  @keyframes button-loading {
    to {
      transform: rotate(360deg);
    }
  }

  /* Pulse animation for important actions */
  [data-slot="button"][data-pulse="true"] {
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }

  @keyframes pulse {
    0%, 100% {
      opacity: 1;
    }
    50% {
      opacity: 0.8;
      transform: scale(1.05);
    }
  }
}


.skeleton {
  animation: shimmer 2s infinite;
  background: linear-gradient(
    90deg,
    hsl(var(--muted)) 0px,
    hsl(var(--muted) / 0.5) 50%,
    hsl(var(--muted)) 100%
  );
  background-size: 1000px 100%;
}

/* Typography enhancements */
.text-gradient {
  background: var(--gradient-primary);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.text-balance {
  text-wrap: balance;
}

/* Focus improvements */
.focus-ring {
  outline: 2px solid transparent;
  outline-offset: 2px;
  transition: all var(--animation-fast);
}

.focus-ring:focus-visible {
  outline-color: hsl(var(--primary-500));
  outline-offset: 2px;
}

/* Smooth scroll for better UX */
@media (prefers-reduced-motion: no-preference) {
  html {
    scroll-behavior: smooth;
  }
}

/* Chat: ブラウザの自動スクロールアンカーを無効化して制御を一元化 */
.chat-scroll-container {
  overflow-anchor: none;
}

/* Chat widget header responsive layout */
.chat-header {
  container-type: inline-size;
  container-name: chat-header;
}

.chat-header__top {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  gap: 0.5rem;
  width: 100%;
}

.chat-header__menu {
  flex-shrink: 0;
}

.chat-header__title {
  min-width: 0;
}

.chat-header__context {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  margin-left: auto;
  font-size: 0.75rem;
  line-height: 1.2;
  color: hsl(var(--muted-foreground));
  flex-shrink: 0;
}

.chat-header__contextLabel {
  white-space: nowrap;
}

.chat-header__actions {
  display: flex;
  align-items: center;
  gap: 0.25rem;
  margin-left: 0.25rem;
  flex-shrink: 0;
}

@container chat-header (max-width: 420px) {
  .chat-header__context {
    order: 4;
    width: 100%;
    justify-content: flex-end;
    margin-left: 0;
    padding-top: 0.25rem;
  }

  .chat-header__actions {
    order: 3;
    margin-left: 0;
  }
}

/* Modern card styles */
.card-modern {
  background: hsl(var(--card));
  border-radius: var(--radius-xl);
  box-shadow: var(--shadow-card);
  overflow: hidden;
  position: relative;
  border: 1px solid hsl(var(--border-subtle));
  transition: all var(--animation-base) cubic-bezier(0.4, 0, 0.2, 1);
}

.card-modern:hover {
  box-shadow: var(--shadow-lg);
  border-color: hsl(var(--border-default) / 0.8);
  transform: translateY(-2px);
}

.card-modern::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 4px;
  background: var(--gradient-primary);
  opacity: 0;
  transition: opacity var(--animation-base);
}

.card-modern:hover::before {
  opacity: 1;
}

/* Border gradient effect */
.border-gradient {
  position: relative;
  background: linear-gradient(hsl(var(--card)), hsl(var(--card))) padding-box,
              linear-gradient(135deg, hsl(var(--primary-400) / 0.5), hsl(var(--secondary-400) / 0.5)) border-box;
  border: 1px solid transparent;
  border-radius: var(--radius-lg);
}

/* Glow border effect */
.border-glow {
  position: relative;
  border: 1px solid hsl(var(--border-default));
  transition: all var(--animation-base) ease;
}

.border-glow:hover {
  border-color: hsl(var(--primary-400) / 0.5);
  box-shadow: var(--shadow-glow);
}

/* Glass border effect */
.border-glass {
  background: hsl(var(--bg) / 0.3);
  backdrop-filter: blur(12px);
  -webkit-backdrop-filter: blur(12px);
  border: 1px solid hsl(var(--border) / 0.3);
  box-shadow: 0 8px 32px hsl(0 0% 0% / 0.08);
}

/* Elevated card */
.card-elevated {
  background: hsl(var(--card));
  border: 1px solid hsl(var(--border-subtle));
  box-shadow: var(--shadow-elevated);
  border-radius: var(--radius-lg);
  transition: all var(--animation-base) cubic-bezier(0.4, 0, 0.2, 1);
}

.card-elevated:hover {
  box-shadow: var(--shadow-xl);
  transform: translateY(-4px);
  border-color: hsl(var(--primary-300) / 0.3);
}

/* Soft neumorphic style */
.neo-soft {
  background: linear-gradient(145deg, hsl(var(--bg)), hsl(var(--muted) / 0.5));
  box-shadow: 5px 5px 15px hsl(0 0% 0% / 0.08),
              -5px -5px 15px hsl(0 0% 100% / 0.5);
  border: 1px solid hsl(var(--border-subtle));
}

@media (prefers-color-scheme: dark) {
  .neo-soft {
    background: linear-gradient(145deg, hsl(var(--card) / 0.9), hsl(var(--card)));
    box-shadow: 5px 5px 15px hsl(0 0% 0% / 0.3),
                -5px -5px 15px hsl(0 0% 100% / 0.03);
  }

  .border-glass {
    background: hsl(var(--bg) / 0.05);
    border-color: hsl(var(--border) / 0.2);
  }
}

/* Modern divider styles */
.divider-soft {
  position: relative;
  background: linear-gradient(90deg,
              transparent,
              hsl(var(--border-default) / 0.5) 20%,
              hsl(var(--border-default) / 0.5) 80%,
              transparent);
  height: 1px;
  border: none;
}

.divider-glow {
  position: relative;
  background: hsl(var(--border-default));
  height: 1px;
  transition: all var(--animation-base) ease;
}

.divider-glow:hover {
  background: hsl(var(--primary-400) / 0.5);
  box-shadow: 0 0 10px hsl(var(--primary-400) / 0.3);
}

.divider-gradient {
  position: relative;
  background: linear-gradient(90deg,
              hsl(var(--primary-400) / 0.3),
              hsl(var(--secondary-400) / 0.3),
              hsl(var(--primary-400) / 0.3));
  background-size: 200% 100%;
  animation: gradient-shift 8s ease infinite;
  height: 1px;
  border: none;
}

@keyframes gradient-shift {
  0%, 100% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
}

/* Vertical dividers */
.divider-vertical-soft {
  position: relative;
  background: linear-gradient(180deg,
              transparent,
              hsl(var(--border-default) / 0.5) 20%,
              hsl(var(--border-default) / 0.5) 80%,
              transparent);
  width: 1px;
  height: 100%;
  border: none;
}

/* Enhanced header divider */
.divider-header {
  position: relative;
  height: 1px;
  background: linear-gradient(90deg,
              transparent,
              hsl(var(--border-default) / 0.3) 5%,
              hsl(var(--border-default) / 0.8) 50%,
              hsl(var(--border-default) / 0.3) 95%,
              transparent);
}

.divider-header::after {
  content: "";
  position: absolute;
  bottom: -1px;
  left: 0;
  right: 0;
  height: 1px;
  background: linear-gradient(90deg,
              transparent,
              hsl(var(--primary-400) / 0.1) 50%,
              transparent);
  opacity: 0;
  transition: opacity var(--animation-base);
}

.divider-header:hover::after {
  opacity: 1;
}

/* Panel dividers for workspace */
.divider-panel {
  position: relative;
  background: linear-gradient(180deg,
              hsl(var(--border-default) / 0.2),
              hsl(var(--border-default) / 0.6) 50%,
              hsl(var(--border-default) / 0.2));
}

/* Premium button effects - refined */
.btn-gradient {
  background: linear-gradient(135deg, 
              hsl(var(--primary-600)) 0%, 
              hsl(var(--primary-500)) 100%);
  color: white;
  font-weight: 500;
  transition: all var(--animation-fast) cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
  overflow: hidden;
  box-shadow: 0 2px 4px hsl(0 0% 0% / 0.1),
              0 1px 2px hsl(0 0% 0% / 0.06);
}

.btn-gradient::before {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.25);
  transform: translate(-50%, -50%);
  transition: width var(--animation-base) ease-out,
              height var(--animation-base) ease-out;
  pointer-events: none;
}

.btn-gradient:active::before {
  width: 200px;
  height: 200px;
}

.btn-gradient:hover {
  transform: translateY(-1px);
  box-shadow: 0 4px 8px hsl(0 0% 0% / 0.15),
              0 2px 4px hsl(0 0% 0% / 0.08);
  background: linear-gradient(135deg, 
              hsl(var(--primary-700)) 0%, 
              hsl(var(--primary-600)) 100%);
}

/* Floating action button */
.btn-float {
  position: fixed;
  bottom: 2rem;
  right: 2rem;
  width: 56px;
  height: 56px;
  border-radius: 50%;
  background: var(--gradient-primary);
  color: white;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 4px 12px hsl(var(--primary-600) / 0.3),
              0 2px 6px hsl(var(--primary-600) / 0.2);
  transition: all var(--animation-base) cubic-bezier(0.4, 0, 0.2, 1);
  z-index: 1000;
}

.btn-float:hover {
  transform: scale(1.1) rotate(90deg);
  box-shadow: 0 8px 24px hsl(var(--primary-600) / 0.4),
              0 4px 12px hsl(var(--primary-600) / 0.3);
}

.btn-float:active {
  transform: scale(0.95);
}

/* Icon button effects */
.btn-icon {
  position: relative;
  transition: all var(--animation-fast) cubic-bezier(0.4, 0, 0.2, 1);
}

.btn-icon:hover svg {
  transform: scale(1.2);
}

.btn-icon:active svg {
  transform: scale(0.9);
}

/* Neumorphic button style */
.btn-neumorphic {
  background: hsl(var(--bg));
  box-shadow: 8px 8px 16px hsl(0 0% 0% / 0.1),
              -8px -8px 16px hsl(0 0% 100% / 0.7);
  border: none;
  transition: all var(--animation-base) cubic-bezier(0.4, 0, 0.2, 1);
}

.btn-neumorphic:hover {
  box-shadow: 10px 10px 20px hsl(0 0% 0% / 0.15),
              -10px -10px 20px hsl(0 0% 100% / 0.8);
}

.btn-neumorphic:active {
  box-shadow: inset 4px 4px 8px hsl(0 0% 0% / 0.1),
              inset -4px -4px 8px hsl(0 0% 100% / 0.7);
}

@media (prefers-color-scheme: dark) {
  .btn-neumorphic {
    background: hsl(var(--card));
    box-shadow: 8px 8px 16px hsl(0 0% 0% / 0.3),
                -8px -8px 16px hsl(0 0% 100% / 0.05);
  }
  
  .btn-neumorphic:hover {
    box-shadow: 10px 10px 20px hsl(0 0% 0% / 0.4),
                -10px -10px 20px hsl(0 0% 100% / 0.06);
  }
  
  .btn-neumorphic:active {
    box-shadow: inset 4px 4px 8px hsl(0 0% 0% / 0.3),
                inset -4px -4px 8px hsl(0 0% 100% / 0.05);
  }
}

/* Accordion animations */
@keyframes accordion-down {
  from {
    height: 0;
  }
  to {
    height: var(--radix-accordion-content-height);
  }
}

@keyframes accordion-up {
  from {
    height: var(--radix-accordion-content-height);
  }
  to {
    height: 0;
  }
}

.animate-accordion-down {
  animation: accordion-down 0.2s ease-out;
}

.animate-accordion-up {
  animation: accordion-up 0.2s ease-out;
}

/* --- NavTree Modern Highlight Styles ------------------------------------ */

/* Custom CSS variables for NavTree */
:root {
  --nav-selected-gradient: linear-gradient(135deg,
    hsl(var(--primary-100)) 0%,
    hsl(var(--primary-50)) 100%);
  --nav-hover-shadow: 0 1px 3px hsl(var(--primary-500) / 0.1);
  --nav-focus-ring: hsl(var(--primary-400) / 0.5);
  --nav-selected-shadow: 0 1px 3px hsl(var(--primary-500) / 0.08);
  --nav-glow-color: hsl(var(--primary-400) / 0.3);
}

@media (prefers-color-scheme: dark) {
  :root {
    --nav-selected-gradient: linear-gradient(135deg,
      hsl(var(--primary-800) / 0.3) 0%,
      hsl(var(--primary-700) / 0.2) 100%);
    --nav-hover-shadow: 0 2px 8px hsl(var(--primary-400) / 0.2),
                        0 1px 3px hsl(var(--primary-400) / 0.15);
    --nav-selected-shadow: 0 4px 12px hsl(var(--primary-400) / 0.3),
                           0 2px 6px hsl(var(--primary-400) / 0.2);
    --nav-glow-color: hsl(var(--primary-400) / 0.4);
  }
}

/* NavTree animations */

@keyframes nav-fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

/* NavTree selection classes */

.nav-tree-item {
  position: relative;
  transition: background-color var(--animation-fast);
}

.nav-tree-item::after {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: inherit;
  opacity: 0;
  pointer-events: none;
  transition: opacity var(--animation-fast), box-shadow var(--animation-fast);
}

.nav-tree-item:hover::after {
  opacity: 1;
  box-shadow: var(--nav-hover-shadow);
}

.nav-tree-item:focus-visible::after {
  opacity: 1;
  box-shadow: 0 0 0 2px var(--nav-focus-ring);
}

.nav-course-selected,
.nav-lesson-selected {
  background: var(--nav-selected-gradient) !important;
  box-shadow: var(--nav-selected-shadow);
  position: relative;
}

.nav-course-selected::before,
.nav-lesson-selected::before,
.nav-card-selected::before {
  animation: nav-fade-in var(--animation-fast) ease-out;
}

.nav-course-selected::before {
  content: "";
  position: absolute;
  left: 0;
  top: 50%;
  transform: translateY(-50%);
  width: 2px;
  height: 16px;
  background: hsl(var(--primary-500));
  border-radius: 0 1px 1px 0;
}

.nav-lesson-selected::before {
  content: "";
  position: absolute;
  left: 0;
  top: 50%;
  transform: translateY(-50%);
  width: 2px;
  height: 14px;
  background: hsl(var(--primary-400));
  border-radius: 0 1px 1px 0;
}

.nav-card-selected {
  background: hsl(var(--accent)) !important;
  box-shadow: var(--nav-selected-shadow);
  position: relative;
}

.nav-card-selected::before {
  content: "";
  position: absolute;
  left: 0;
  top: 50%;
  transform: translateY(-50%);
  width: 2px;
  height: 10px;
  background: hsl(var(--primary-300));
  border-radius: 0 1px 1px 0;
}

@media (prefers-color-scheme: dark) {
  .nav-card-selected {
    background: hsl(var(--primary-800) / 0.1) !important;
  }

  .nav-card-selected::before {
    background: hsl(var(--primary-500) / 0.6);
  }
}

.nav-selected-progress {
  filter: drop-shadow(0 0 6px var(--nav-glow-color));
}

@media (prefers-color-scheme: dark) {
  .nav-selected-progress {
    filter: drop-shadow(0 0 8px var(--nav-glow-color));
  }
}

@media (prefers-reduced-motion: reduce) {
  .nav-tree-item {
    transition: none !important;
  }

  .nav-tree-item::after {
    transition: none !important;
  }

  .nav-course-selected::before,
  .nav-lesson-selected::before,
  .nav-card-selected::before {
    animation: none;
  }
}
